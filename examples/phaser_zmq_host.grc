options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: phaser_zmq_host
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: bandwidth
  id: variable
  parameters:
    comment: ''
    value: 0.75*samp_rate
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 48.0]
    rotation: 0
    state: enabled
- name: rpi_ip
  id: variable
  parameters:
    comment: ''
    value: '"169.254.227.151"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 48.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 30e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 48.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport numpy as np\n\
      from gnuradio import gr\nimport pmt\nimport re\n\n\nclass blk(gr.sync_block):\
      \  # other base classes are basic_block, decim_block, interp_block\n  \"\"\"\
      Embedded Python Block example - a simple multiply const\"\"\"\n\n  def __init__(self,\
      \ example_param=1.0):  # only default arguments here\n    \"\"\"arguments to\
      \ this function show up as parameters in GRC\"\"\"\n    gr.sync_block.__init__(\n\
      \        self,\n        name='Embedded Python Block',   # will show up in GRC\n\
      \        in_sig=[],\n        out_sig=[]\n    )\n    # if an attribute with the\
      \ same name as a parameter is found,\n    # a callback is registered (properties\
      \ work, too).\n    self.example_param = example_param\n\n    self.message_port_register_in(pmt.intern('in'))\n\
      \    self.message_port_register_out(pmt.intern('out'))\n    self.set_msg_handler(pmt.intern('in'),\
      \ self.handle_msg)\n\n  def handle_msg(self, msg):\n    # Sum the data in phaser:beam0\
      \ and phaser:beam1\n    meta = msg\n    items = pmt.to_python(msg)\n    # Sum\
      \ any items whose key matches the regex\n    beam_key_pattern = 'phaser:beam[0-9]+'\n\
      \    beams = []\n    for key, val in items.items():\n      if re.match(beam_key_pattern,\
      \ key):\n        beams.append(val)\n        meta = pmt.dict_delete(meta, pmt.intern(key))\n\
      \n    # Sum the beams and send to PDU\n    data = np.sum(beams, axis=0)\n  \
      \  self.message_port_pub(pmt.intern('out'),\n                          pmt.cons(meta,\
      \ pmt.to_pmt(data)))\n"
    affinity: ''
    alias: ''
    comment: ''
    example_param: '1.0'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Embedded Python Block', 'blk', [('example_param', '1.0')], [('in',
      'message', 1)], [('out', 'message', 1)], 'Embedded Python Block example - a
      simple multiply const', ['example_param'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [416, 312.0]
    rotation: 0
    state: enabled
- name: plasma_lfm_source_0
  id: plasma_lfm_source
  parameters:
    affinity: ''
    alias: ''
    bandwidth: bandwidth
    bandwidth_key: radar:bandwidth
    comment: ''
    duration_key: radar:duration
    label_key: core:label
    maxoutbuf: '0'
    minoutbuf: '0'
    prf: '0'
    prf_key: radar:prf
    pulse_width: 10e-6
    samp_rate: samp_rate
    sample_rate_key: core:sample_rate
    start_freq: -bandwidth/2
    start_freq_key: radar:start_freq
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 160.0]
    rotation: 0
    state: enabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'False'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '""'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: msg_complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 304.0]
    rotation: 0
    state: enabled
- name: zeromq_pull_msg_source_0
  id: zeromq_pull_msg_source
  parameters:
    address: f"tcp://{rpi_ip}:3001"
    affinity: ''
    alias: ''
    bind: 'False'
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [168, 312.0]
    rotation: 0
    state: enabled
- name: zeromq_push_msg_sink_0
  id: zeromq_push_msg_sink
  parameters:
    address: f"tcp://{rpi_ip}:2001"
    affinity: ''
    alias: ''
    bind: 'False'
    comment: ''
    timeout: '100'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [456, 176.0]
    rotation: 0
    state: enabled

connections:
- [epy_block_0, out, qtgui_time_sink_x_0, in]
- [plasma_lfm_source_0, out, zeromq_push_msg_sink_0, in]
- [zeromq_pull_msg_source_0, out, epy_block_0, in]

metadata:
  file_format: 1
  grc_version: v3.10.11.0-1-gee27d6f3
